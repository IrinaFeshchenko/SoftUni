int n = int.Parse(Console.ReadLine());

string d0,d1,d2,d3;

d0 = new string('.', n);
Console.WriteLine("{0}", d0);

d0 = new string('.', n)
d1 = new string('#', n)
Console.WriteLine("{0}{1}{0}", d0, d1);

for (int i = 0; i < n/2; i++)
{
	string d0 = new string('.', n - (2 * (i+1)));
	string d1 = new string('.', 2 * i);
	string d2 = new string('.', n-2);
	Console.WriteLine("{0}##{1}#{2}#{1}##{0}", d0,d1,d2);
}
//reversing the above image
for (int i = (n / 2)-1; i >=0; i--)
{
	string d0 = new string('.', n - (2 * (i + 1)));
	string d1 = new string('.', 2 * i);
	string d2 = new string('.', n - 2);
	Console.WriteLine("{0}##{1}#{2}#{1}##{0}", d0, d1, d2);
}

/////////////////////////
// increase variables size
// test edge cases, +1 and -1, with odd and even number of parameters(if flipping values)
// reread conditions, special cases;

